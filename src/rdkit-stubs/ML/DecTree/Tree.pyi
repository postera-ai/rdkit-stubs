from _typeshed import Incomplete

class TreeNode:
    children: Incomplete
    parent: Incomplete
    name: Incomplete
    data: Incomplete
    terminalNode: Incomplete
    label: Incomplete
    level: Incomplete
    examples: Incomplete
    def __init__(
        self,
        parent,
        name,
        label: Incomplete | None = ...,
        data: Incomplete | None = ...,
        level: int = ...,
        isTerminal: int = ...,
    ) -> None: ...
    def NameTree(self, varNames) -> None: ...
    NameModel: Incomplete
    def AddChildNode(self, node) -> None: ...
    def AddChild(
        self,
        name,
        label: Incomplete | None = ...,
        data: Incomplete | None = ...,
        isTerminal: int = ...,
    ): ...
    def PruneChild(self, child) -> None: ...
    def ReplaceChildIndex(self, index, newChild) -> None: ...
    def GetChildren(self): ...
    def Destroy(self) -> None: ...
    def GetName(self): ...
    def SetName(self, name) -> None: ...
    def GetData(self): ...
    def SetData(self, data) -> None: ...
    def GetTerminal(self): ...
    def SetTerminal(self, isTerminal) -> None: ...
    def GetLabel(self): ...
    def SetLabel(self, label) -> None: ...
    def GetLevel(self): ...
    def SetLevel(self, level) -> None: ...
    def GetParent(self): ...
    def SetParent(self, parent) -> None: ...
    def Print(self, level: int = ..., showData: int = ...) -> None: ...
    def Pickle(self, fileName: str = ...) -> None: ...
    def __str__(self): ...
    def __cmp__(self, other): ...
    def __lt__(self, other): ...
    def __eq__(self, other): ...

def _exampleCode() -> None: ...
