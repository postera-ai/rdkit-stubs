from _typeshed import Incomplete
from rdkit.ML.Data import DataUtils as DataUtils

class Composite:
    modelList: Incomplete
    errList: Incomplete
    countList: Incomplete
    modelVotes: Incomplete
    quantBounds: Incomplete
    nPossibleVals: Incomplete
    quantizationRequirements: Incomplete
    _descNames: Incomplete
    _mapOrder: Incomplete
    activityQuant: Incomplete
    def __init__(self) -> None: ...
    _modelFilterFrac: Incomplete
    _modelFilterVal: Incomplete
    def SetModelFilterData(
        self, modelFilterFrac: float = ..., modelFilterVal: float = ...
    ) -> None: ...
    def SetDescriptorNames(self, names) -> None: ...
    def GetDescriptorNames(self): ...
    def SetQuantBounds(self, qBounds, nPossible: Incomplete | None = ...) -> None: ...
    def GetQuantBounds(self): ...
    def GetActivityQuantBounds(self): ...
    def SetActivityQuantBounds(self, bounds) -> None: ...
    def QuantizeActivity(
        self, example, activityQuant: Incomplete | None = ..., actCol: int = ...
    ): ...
    def QuantizeExample(self, example, quantBounds: Incomplete | None = ...): ...
    def MakeHistogram(self): ...
    def CollectVotes(
        self,
        example,
        quantExample,
        appendExample: int = ...,
        onlyModels: Incomplete | None = ...,
    ): ...
    def ClassifyExample(
        self,
        example,
        threshold: int = ...,
        appendExample: int = ...,
        onlyModels: Incomplete | None = ...,
    ): ...
    def GetVoteDetails(self): ...
    def _RemapInput(self, inputVect): ...
    def GetInputOrder(self): ...
    def SetInputOrder(self, colNames) -> None: ...
    def Grow(
        self,
        examples,
        attrs,
        nPossibleVals,
        buildDriver,
        pruner: Incomplete | None = ...,
        nTries: int = ...,
        pruneIt: int = ...,
        needsQuantization: int = ...,
        progressCallback: Incomplete | None = ...,
        **buildArgs
    ) -> None: ...
    def ClearModelExamples(self) -> None: ...
    def Pickle(self, fileName: str = ..., saveExamples: int = ...) -> None: ...
    def AddModel(self, model, error, needsQuantization: int = ...) -> None: ...
    def AverageErrors(self): ...
    def SortModels(self, sortOnError: bool = ...) -> None: ...
    def GetModel(self, i): ...
    def SetModel(self, i, val) -> None: ...
    def GetCount(self, i): ...
    def SetCount(self, i, val) -> None: ...
    def GetError(self, i): ...
    def SetError(self, i, val) -> None: ...
    def GetDataTuple(self, i): ...
    def SetDataTuple(self, i, tup) -> None: ...
    def GetAllData(self): ...
    def __len__(self) -> int: ...
    def __getitem__(self, which): ...
    def __str__(self): ...
