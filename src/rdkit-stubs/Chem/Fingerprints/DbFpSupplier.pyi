from _typeshed import Incomplete
from rdkit import DataStructs as DataStructs
from rdkit.VLib.Node import VLibNode as VLibNode

class DbFpSupplier(VLibNode):
    _usePickles: Incomplete
    _data: Incomplete
    _fpColName: Incomplete
    _colNames: Incomplete
    fpCol: Incomplete
    _numProcessed: int
    def __init__(
        self, dbResults, fpColName: str = ..., usePickles: bool = ...
    ) -> None: ...
    def GetColumnNames(self): ...
    def _BuildFp(self, data): ...
    def next(self): ...
    __next__: Incomplete

class ForwardDbFpSupplier(DbFpSupplier):
    def __init__(self, *args, **kwargs) -> None: ...
    _dataIter: Incomplete
    def reset(self) -> None: ...
    def NextItem(self): ...

class RandomAccessDbFpSupplier(DbFpSupplier):
    def __init__(self, *args, **kwargs) -> None: ...
    def __len__(self) -> int: ...
    def __getitem__(self, idx): ...
    _pos: int
    def reset(self) -> None: ...
    def NextItem(self): ...

def _runDoctests(verbose: Incomplete | None = ...) -> None: ...
