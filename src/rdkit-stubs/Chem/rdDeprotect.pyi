from typing import Any, ClassVar

class DeprotectData:
    __instance_size__: ClassVar[int] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    @classmethod
    def isValid(cls, RDKit) -> Any: ...
    @classmethod
    def __reduce__(cls) -> Any: ...
    @property
    def abbreviation(self) -> Any: ...
    @property
    def deprotection_class(self) -> Any: ...
    @property
    def example(self) -> Any: ...
    @property
    def full_name(self) -> Any: ...
    @property
    def reaction_smarts(self) -> Any: ...

class DeprotectDataVect:
    __instance_size__: ClassVar[int] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    @classmethod
    def append(cls, *args, **kwargs) -> Any: ...
    @classmethod
    def extend(cls, *args, **kwargs) -> Any: ...
    @classmethod
    def __contains__(cls, other) -> Any: ...
    @classmethod
    def __delitem__(cls, other) -> Any: ...
    @classmethod
    def __getitem__(cls, index) -> Any: ...
    @classmethod
    def __iter__(cls, boost, std) -> Any: ...
    @classmethod
    def __len__(cls) -> Any: ...
    @classmethod
    def __reduce__(cls) -> Any: ...
    @classmethod
    def __setitem__(cls, index, object) -> Any: ...

def Deprotect(RDKit) -> Any: ...
def DeprotectInPlace(RDKit) -> Any: ...
def GetDeprotections() -> Any: ...
