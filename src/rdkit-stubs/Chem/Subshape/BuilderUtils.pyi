from rdkit import Geometry as Geometry
from rdkit.Chem.Subshape import SubshapeObjects as SubshapeObjects

def ComputeGridIndices(shapeGrid, winRad): ...
def ComputeShapeGridCentroid(pt, shapeGrid, winRad): ...
def FindTerminalPtsFromShape(shape, winRad, fraction, maxGridVal: int = ...): ...
def FindTerminalPtsFromConformer(conf, winRad, nbrCount): ...
def FindGridPointBetweenPoints(pt1, pt2, shapeGrid, winRad): ...
def ClusterTerminalPts(pts, winRad, scale): ...
def GetMoreTerminalPoints(
    shape, pts, winRad, maxGridVal, targetNumber: int = ...
) -> None: ...
def FindFarthestGridPoint(shape, loc, winRad, maxGridVal): ...
def ExpandTerminalPts(
    shape, pts, winRad, maxGridVal: float = ..., targetNumPts: int = ...
) -> None: ...
def AppendSkeletonPoints(
    shapeGrid,
    termPts,
    winRad,
    stepDist,
    maxGridVal: int = ...,
    maxDistC: float = ...,
    distTol: float = ...,
    symFactor: float = ...,
    verbose: bool = ...,
): ...
def CalculateDirectionsAtPoint(pt, shapeGrid, winRad) -> None: ...
def AssignMolFeatsToPoints(pts, mol, featFactory, winRad) -> None: ...
